<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hellobook.mapper.PostMapper">

	<sql id="criteria">
	  <trim prefix="(" suffix=") and " prefixOverrides="OR">
	    <foreach collection="typeArr" item="type">
		  <trim prefix="OR">
			<choose>
				<when test="type == 'N'.toString()">
					lower(nickname) like '%'||lower(#{keyword})||'%'
				</when>
				<when test="type == 'C'.toString()">
					lower(content) like '%'||lower(#{keyword})||'%'
				</when>
			</choose>
		  </trim>
	    </foreach>
	  </trim>
	</sql>
<!-- ===================================================================================== -->

	<select id="selectPostCount" resultType="int">
		SELECT /*+ index_desc(p post_pk)*/ count(p.email) AS count  
		FROM post p, member m   
		WHERE p.email = m.email AND   
		<include refid="criteria"></include>   
		<![CDATA[ pno > 0 ]]> 
	</select>

	<select id="selectAllPost" resultType="com.hellobook.domain.PostVO">
        <![CDATA[
 			SELECT pno, content, email, pdate, nickname, profile, language 
 			FROM (  
 				SELECT /*+ index_desc(p post_pk)*/  rownum rn, p.pno, p.content, p.email, p.pdate, m.nickname, m.profile, m.language
 				FROM post p, member m   
 				WHERE p.email = m.email AND   
 		]]>
				<include refid="criteria"></include>
		<![CDATA[	
 			 	rownum <= #{pageNum} * #{amount} )  
 			WHERE rn > (#{pageNum}-1) * #{amount} 
         ]]> 
	</select>
	<select id="selectThreeReplyByPno" resultType="com.hellobook.domain.ReplyVO">
		<![CDATA[
			SELECT /*+ index_desc(r reply_pk)*/ r.repno, r.pno, r.rcontent, r.repdate, r.email, m.nickname, m.language, m.profile   
			FROM reply r, member m   
			WHERE r.pno = #{pno} AND r.email = m.email AND r.depth = 1 AND rownum < 4
		]]>
	</select>
	<select id="selectLikeByPno" resultType="com.hellobook.domain.PostLikeVO">
		SELECT l.pno, l.email, m.nickname, m.language, m.profile    
		FROM post_like l, member m   
		WHERE l.pno = #{pno} AND l.email = m.email
	</select>
	<select id="selectFileByPno" resultType="com.hellobook.domain.PostFileVO">
		SELECT * FROM post_file WHERE pno = #{pno} 
	</select>

	<insert id="insertPost">
		<selectKey keyProperty="pno" order="BEFORE" resultType="int">
			select post_seq.nextval from dual
		</selectKey>
		insert into post (pno,content,email,pdate) 
		values(#{pno},#{content},#{email},sysdate)
	</insert>
	<select id="maxPno" resultType="int">
		select max(pno) from post where email = #{email}
	</select>

	<insert id="insertPostFile">
		<selectKey keyProperty="fno" order="BEFORE" resultType="int">
			select post_file_seq.nextval from dual
		</selectKey>
		insert into post_file (fno,email,pno,uuid) 
		values(#{fno},#{email},#{pno},#{uuid})
	</insert>

	<delete id="deletePost">
		DELETE FROM post WHERE pno=#{pno}
	</delete>

	<delete id="deletePostFileByFno">
		DELETE FROM post_file WHERE fno=#{fno}
	</delete>
	
	<delete id="deletePostFileByPno">
		DELETE FROM post_file WHERE pno=#{pno}
	</delete>

	<update id="updatePost">
		UPDATE post SET   
			content=#{content},
			pdate=sysdate   
		WHERE pno=#{pno}
	</update>

	<select id="countLike" resultType="int">
		SELECT count(*) FROM post_like where pno = #{pno}
	</select>
	<delete id="deleteLike">
		DELETE FROM post_like WHERE email=#{email} AND pno=#{pno}
	</delete>
	<insert id="addLike">
		INSERT INTO post_like (pno,email)   
		VALUES(#{pno},#{email})
	</insert>

	<select id="postDetail" resultType="com.hellobook.domain.PostVO">
		SELECT p.pno, p.content, p.email, p.pdate, m.nickname, m.language, m.profile   
		FROM post p, member m   
		WHERE p.pno = #{pno} AND p.email = m.email   
	</select>
		<select id="selectReplyByPno" resultType="com.hellobook.domain.ReplyVO">
			SELECT /*+ index_desc(r reply_pk)*/ r.repno, r.pno, r.rcontent, r.depth, r.repdate, r.email, m.nickname, m.language, m.profile   
			FROM reply r, member m   
			WHERE r.pno = #{pno} AND r.email = m.email AND r.depth = 1   
		</select>
		<select id="selectDepthByRepno" resultType="com.hellobook.domain.ReplyVO">
			SELECT /*+ index_desc(r reply_pk)*/ r.repno, r.pno, r.rcontent, r.depth, r.repdate, r.email, m.nickname, m.language, m.profile   
			FROM reply r, member m   
			WHERE r.refno = #{repno} AND r.email = m.email AND r.depth = 2   
		</select>
		
	<select id="selectMypost" resultType="com.hellobook.domain.PostVO">
		<![CDATA[
 			SELECT pno, content, email, pdate, nickname, profile, language 
 			FROM (  
 				SELECT /*+ index_desc(p post_pk)*/ p.pno, p.content, p.email, p.pdate, m.nickname, m.profile, m.language
 				FROM post p, member m   
 				WHERE p.email = m.email)  
 			WHERE nickname=#{nickname}
         ]]>
	</select>
	
	<select id="selectMyLikepost" resultType="com.hellobook.domain.PostVO">
		<![CDATA[
 			select l.pno, l.content, l.writer, l.pdate, m.nickname, m.profile, m.language
				from
				    member m, (select /*+ index_desc(p post_pk)*/ pl.pno, content, p.email writer, pl.email liker, p.pdate
				    from post_like pl, post p
				    where pl.pno=p.pno and pl.email=#{email}) l
				where m.email=l.writer
				order by l.pno desc
         ]]>
	</select>

	<insert id="insertComment">
		<selectKey keyProperty="repno" order="BEFORE" resultType="int">
			SELECT reply_seq.nextval FROM DUAL
		</selectKey>
		INSERT INTO reply (repno, pno, rcontent, depth, email, refno) 
		values(#{repno}, #{pno}, #{rcontent}, #{depth}, #{email}, #{refno})
	</insert>
	<select id="recentCommentByEmail" resultType="com.hellobook.domain.ReplyVO">
		SELECT *  
		FROM (  
			SELECT r.repno, r.pno, r.rcontent, r.depth, r.email, r.refno, r.repdate, m.nickname, m.language, m.profile   
			FROM reply r, member m   
			WHERE r.email = #{email} AND r.email = m.email   
			ORDER BY r.repno DESC )
		WHERE ROWNUM = 1		
	</select>



</mapper>
