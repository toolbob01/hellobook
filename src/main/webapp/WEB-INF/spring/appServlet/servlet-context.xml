<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 디폴트 프로필 파일 -->
	<resources mapping="/hello_img/member/resources/**" location="/resources/" />
	
	<!-- C드라이브의 hello_img 파일 -->
	<resources mapping="/hello_img/**" location="file:///c:/hello_img/" />
	
	
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.hellobook.controller" />
	
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
	
	<websocket:handlers>
		<websocket:mapping handler="ChatHandler" path="/chat/chat/"/>
		<websocket:sockjs/>
	</websocket:handlers>
		
	<beans:bean id="ChatHandler" class="com.hellobook.handler.ChatHandler"></beans:bean>
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.hellobook.auth.NaverLoginBO" />
	
	<!-- google Class Bean설정 추가 -->
	<beans:bean id="googleClientID" class="java.lang.String">
	        <beans:constructor-arg value="189384727916-jhk88jubhceqdbko4esr9i4jl0otonlb.apps.googleusercontent.com" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="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" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
	        <beans:constructor-arg value="http://localhost:8088/member/memberGoogleLogin" />
	</beans:bean>
	    
	<beans:bean id="googleSns" class="com.hellobook.auth.SnsValue">
	        <beans:constructor-arg value="google" />
	        <beans:constructor-arg ref="googleClientID" />
	        <beans:constructor-arg ref="googleClientSecret" />
	        <beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
		
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID"/>
		<beans:constructor-arg ref="googleClientSecret"/>
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="profile email"/>
		<beans:property name="redirectUri" ref="googleRedirectUrl"/>
	</beans:bean>
	
	<!-- 언어를 변경하기 위한 인터셉터 -->
	<interceptors>
    <beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <beans:property name="paramName" value="lang" />
    </beans:bean>
</interceptors>
</beans:beans>
