<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hellobook.mapper.MemberMapper">

	<resultMap type="com.hellobook.domain.MemberVO"
		id="memberMap">
		<id property="email" column="email" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="nickname" column="nickname" />
		<result property="language" column="language" />
		<result property="birth" column="birth" />
		<result property="sex" column="sex" />
		<result property="hobby" column="hobby" />
		<result property="intro" column="intro" />
		<result property="profile" column="profile" />
		<collection property="authList" resultMap="authMap" />
	</resultMap>

	<resultMap type="com.hellobook.domain.AuthVO" id="authMap">
		<result property="email" column="email" />
		<result property="auth" column="auth" />
	</resultMap>

	<resultMap type="com.hellobook.domain.SessionVO"
		id="sessionMap">
		<id property="email" column="email" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="nickname" column="nickname" />
		<result property="language" column="language" />
		<result property="birth" column="birth" />
		<result property="sex" column="sex" />
		<result property="hobby" column="hobby" />
		<result property="intro" column="intro" />
		<result property="profile" column="profile" />
		<collection property="authList" resultMap="authMap2" />
	</resultMap>

	<resultMap type="com.hellobook.domain.AuthVO" id="authMap2">
		<result property="email" column="email" />
		<result property="auth" column="auth" />
	</resultMap>


	<insert id="insertMember">
		insert into member (email, password, nickname,
		language, birth, sex, hobby, profile)
		values (#{email}, #{password},
		#{nickname}, #{language}, #{birth}, #{sex}, #{hobby}, #{profile})
	</insert>

	<insert id="insertAuth">
		insert into auth (email)
		values (#{email})
	</insert>

	<update id="modify">
		UPDATE member SET nickname = #{nickname}, intro =
		#{intro}, birth =
		#{birth}, language = #{language}, sex = #{sex}, hobby
		= #{hobby}
		WHERE email = #{email}
	</update>


	<select id="pwCheck" resultType="String">
		select password from member where email = #{email}
	</select>

	<update id="pwUpdate">
		update member set password = #{password} where email = #{email}
	</update>



	<delete id="quitMember">
		delete from member where email = #{email}
	</delete>

	<select id="checkEmail" resultType="int">
		select count(*) from member
		where email = #{email}
	</select>

	<select id="checkNickname" resultType="int">
		select count(*) from
		member where nickname = #{nickname}
	</select>

	<select id="read" resultMap="sessionMap">
		select m.email, password, nickname,
		language, birth, sex, hobby, m.intro, m.profile, auth
		from member m
		left outer join auth a
		on m.email = a.email
		where m.email = #{email}

	</select>

	<select id="readByNickname" resultMap="memberMap">
		select m.email, password,
		nickname, language, birth, sex, hobby, m.intro, m.profile, auth
		from
		member m
		left outer join auth a
		on m.email = a.email
		where m.nickname =
		#{nickname}
	</select>

	<!-- <select id="selectFriends" resultType="com.hellobook.domain.MemberVO"> -->
	<!-- SELECT f.frno, f.femail, m.nickname, m.language, m.birth, m.sex, m.hobby, 
		m.intro, m.profile -->
	<!-- FROM friend f, member m -->
	<!-- WHERE f.femail = m.email AND f.email = #{email} -->
	<!-- </select> -->

	<select id="selectFriends"
		resultType="com.hellobook.domain.MemberVO">
		SELECT f.frno, m.email, m.nickname, m.language, m.birth,
		m.sex, m.hobby, m.intro, m.profile
		FROM friend f
		LEFT OUTER JOIN member
		m
		ON f.femail = m.email
		WHERE f.email = #{email}
	</select>

	<select id="friendRecommend">
		SELECT * FROM ( SELECT * FROM member ORDER BY
		dbms_random.value)
	</select>

	<update id="updateThumbnailByNickname">
		update member set profile=#{profile} where
		nickname=#{nickname}
	</update>

	<select id="selectAllMember"
		resultType="com.hellobook.domain.MemberVO">
		select email, nickname, profile from member
	</select>

	<select id="getRno" resultType="int">
		select rno from chat_participant where email = #{email}
	</select>
	
	<select id="getNewMno" resultType="Integer">
		select max(c.mno) from chat_msg c where c.rno = #{rno}
	</select>
	
	<select id="getNewChat" resultType="com.hellobook.domain.ChatVO">
		select c.mno, c.rno, mm.nickname, mm.profile, c.content, c.mdate
		from chat_msg c, 
			(select m.nickname, m.profile 
			from member m, (select email from chat_participant where email != #{email} and rno = #{rno}) cp 
			where m.email = cp.email) mm
		where c.mno = #{mno}
	</select>
</mapper>

